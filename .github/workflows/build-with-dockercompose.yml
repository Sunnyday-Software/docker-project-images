name: Docker Compose MD5 Build

on:
  push:
    branches:
      - main

jobs:
  docker-compose-md5-build:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    steps:
      - uses: actions/checkout@v4

      - name: Docker login manuale
        run: |
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Stampa github.workspace
        run: |
          echo "github.workspace Ã¨ valorizzato a: ${{ github.workspace }}"

      - name: Imposta DOCKER_CONFIG nel workspace
        run: |
          mkdir -p ${{ github.workspace }}/.docker
          cp ~/.docker/config.json ${{ github.workspace }}/.docker/config.json
          echo "DOCKER_CONFIG=./.docker" >> $GITHUB_ENV
          cat ${{ github.workspace }}/.docker/config.json

      - name: Rendi eseguibile gli script shell
        run: chmod +x ./dev/scripts/*.sh

      - name: Lista dei file della workspace per debug
        run: |
          echo "pwd:$(pwd)"
          echo "env.DOCKER_CONFIG: ${{ env.DOCKER_CONFIG }}"
          echo "tree:"
          tree -apug -I .git -I .idea
          echo ".env:"
          cat .env

      - name: Rendi eseguibile il binario project
        run: chmod +x ./dpm

      - name: ðŸš€ Debug docker-in-docker env
        run: ./dpm --env .env debug-in-vm

      - name: ðŸš€ Esegui build
        run: ./dpm --env .env

      - name: ðŸš€ Debug actions env
        run: ./dev/scripts/debug-env.sh

      - name: ðŸš€ Debug docker-in-docker env
        run: ./dpm --env .env debug-in-vm

      - name: ðŸš€ Esegui push
        run: ./dpm --env .env push-images